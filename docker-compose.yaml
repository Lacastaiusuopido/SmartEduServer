services:
  smarteduserver:
    build: 
      context: ./SmartEduServer
    container_name: smarteduserver
    ports:
      - "8000:8000"
    volumes:
      - ./SmartEduServer:/app  # 挂载整个后端项目目录
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - PYTHONDONTWRITEBYTECODE=1  # 防止生成 .pyc 文件
      - PYTHONUNBUFFERED=1  # 实时输出日志
    networks:
      - smartedu_network

  celery_worker:
    build: ./SmartEduServer  
    container_name: smartedu_celery_worker
    volumes:
      - ./SmartEduServer:/app
    command: celery -A SmartEduServer worker --pool=solo --loglevel=info
    depends_on:
      - smarteduserver
    networks:
      - smartedu_network

  celery_beat:
    build: ./SmartEduServer
    container_name: smartedu_celery_beat
    volumes:
      - ./SmartEduServer:/app
    command: celery -A SmartEduServer beat --loglevel=info
    depends_on:
      - smarteduserver
      - celery_worker
    networks:
      - smartedu_network

  front-end-new:
    build: 
      context: ./front-end-new
    container_name: front-end-new
    ports:
      - "8083:8080"  # Vue 开发服务器默认端口
    volumes:
      - ./front-end-new:/app  # 挂载整个前端项目目录
      - front-end-node-modules:/app/node_modules  # 使用命名卷
    environment:
      - CHOKIDAR_USEPOLLING=true  # 在 Docker 中启用轮询以检测文件变化
    command: sh -c "npm install && npm run serve"  # 先安装依赖再启动
    networks:
      - smartedu_network

# 添加命名卷定义
volumes:
  front-end-node-modules:

networks:
  smartedu_network:
    driver: bridge